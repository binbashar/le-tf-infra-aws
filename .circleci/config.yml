version: 2.1

jobs:
  #
  # Test 1 & Test 2
  #
  test-static-code-and-linting:
    machine:
      image: ubuntu-1604:202007-01 # Ubuntu 16.04, Docker v19.03.12, Docker Compose v1.26.1

      # This job has been blocked because Docker Layer Caching is not available on your plan.
      # Should upgrade if necessary.
      docker_layer_caching: false

    steps:
      - checkout

      - run:
          name: Context Info Cmds
          command: pwd && ls -ltra && git branch

      - run:
          name: Initialize Repo Makefiles
          command: |
            make init-makefiles
            git update-index --assume-unchanged "Makefile"

      - run:
          name: test1-terraform-format
          command: make format-check

      - run:
          name: Install awscli
          command: sudo -H pip install awscli

      - run:
          name: Configure awscli
          command: |
            # AWS credentials dir
            sudo chown -R $USER:$USER /home/circleci/.aws
            mkdir --parents /home/circleci/.aws/bb

            # AWS defautl awscli profile
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set region us-east-1
            aws configure set output json

            # AWS dev awscli profile
            aws configure set role_arn arn:aws:iam::$AWS_ACCOUNT_ID_SHARED:role/DeployMaster --profile $AWS_PROFILE_NAME
            aws configure set source_profile default --profile $AWS_PROFILE_NAME

            # moving credentials to specific project folder
            cp /home/circleci/.aws/credentials /home/circleci/.aws/bb/credentials
            cp /home/circleci/.aws/config /home/circleci/.aws/bb/config

      - run:
          name: test2-terraform-linting
          command: make tflint-deep

  #
  # Monthly BB Gdrive to S3 backup
  #
  backup-bb-gdrive-to-s3:
    machine:
      image: ubuntu-1604:202007-01 # Ubuntu 16.04, Docker v19.03.12, Docker Compose v1.26.1

      docker_layer_caching: false

    steps:
      - checkout

      - run:
          name: Context Info Cmds
          command: pwd && ls -ltra && git branch

      - run:
          name: backup-gdrive-to-s3
          working_directory: ~/project/shared/storage/@scripts
          environment:
            ANSIBLE_VAULT_PASSWORD_FILE: .vault_pass
          no_output_timeout: 120m
          command: |
            # pre-reqs: install ansible and add ansible-vault binary to the path
            pwd && ls -ltra
            make init-ansible-py
            PATH=$PATH:~/.local/bin
            # secrets: setting ansible-vault pass file + rconf file decrypting
            echo "${ANSIBLE_VAULT_PASS_TF}" > .vault_pass
            make decrypt
            # sync: calling rconf with the proper AWS ENV cred vars
            AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_SHARED_BACKUP_S3 \
            AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_SHARED_BACKUP_S3 \
            AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
            make apply

  #
  # Release
  #
  release-version-with-changelog:
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: false

    environment:
      VERSION_NUMBER: patch # opts: patch, minor or major.

    steps:
      - checkout

      - run:
          name: Context Info Cmds
          command: pwd && ls -ltra && git branch

      - run:
          name: Initialize Repo Makefiles
          command: |
            make init-makefiles
            git update-index --assume-unchanged "Makefile"

      - run:
          name: Release New Version
          command: |
            if git status | grep 'nothing to commit, working tree clean'; then
              echo "==============================================================================================="
              echo "release-$VERSION_NUMBER-with-changelog-circleci"
              echo "==============================================================================================="
              git config --global user.email "$GIT_USER_EMAIL"
              git config --global user.name "$GIT_USER_NAME"
              make release-$VERSION_NUMBER-with-changelog-circleci
            else
              echo "==============================================================================================="
              echo "Changes in working directory pending to be pushed - please check 'git status' cmd output below "
              echo "==============================================================================================="
              echo "$(git status)"
              echo "==============================================================================================="
            fi

#
# CircleCI orbs are open-source, shareable packages of parameterizable reusable
# configuration elements, including jobs, commands, and executors.
#
orbs:
  sumologic: circleci/sumologic@1.0.6

#
# Jobs workflow
#
workflows:
  version: 2
  test_and_release:
    jobs:
      - test-static-code-and-linting:
          context: binbashar-org-global-context
          filters:
            branches:
             ignore: # only branches matching the below regex filters will run
               - master
      - release-version-with-changelog:
          context: binbashar-org-global-context
          filters:
            branches:
             only: # only branches matching the below regex filters will run
               - master
      - sumologic/workflow-collector:
          context: binbashar-org-global-context
          requires:
            - release-version-with-changelog

  monthly_backup_bb_gdrive_to_s3:
    triggers:
      - schedule:
          cron: "0 0 1 * *" # At 00:00 on day-of-month 1 (monthly)
          filters:
            branches:
              only:
                - master
    jobs:
      - backup-bb-gdrive-to-s3:
          context: binbashar-org-cron-context
          filters:
            branches:
             only: # only branches matching the below regex filters will run
               - master
      - sumologic/workflow-collector:
          context: binbashar-org-cron-context
          requires:
            - backup-bb-gdrive-to-s3
