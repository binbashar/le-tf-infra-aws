# ---------------------------------------------------------
# Global shared configs
# ---------------------------------------------------------
global:
  domain: ${argoHost}

  nodeSelector: ${nodeSelector}
  tolerations: ${tolerations}

# ---------------------------------------------------------
# ArgoCD configs
# ---------------------------------------------------------
configs:
  cm:
    exec.enabled: "${enableWebTerminal}"

# ---------------------------------------------------------
# Repository Server
# ---------------------------------------------------------
repoServer:
  env:
  # Increase the default timeout applied when the repo-server executes config management tools
  # such as helm or kustomize
  - name: ARGOCD_EXEC_TIMEOUT
    value: 3m0s

# ---------------------------------------------------------
# Server
# ---------------------------------------------------------
server:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
      # Associate this ingress with the following ingress controller
      kubernetes.io/ingress.class: ${ingressClass}
      # Use the following cert-manager clusterissuer
      cert-manager.io/cluster-issuer: clusterissuer-binbash-cert-manager-clusterissuer
      # The backend (ArgoCD Server) is expecting to handle HTTPS
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    tls: true 


# ---------------------------------------------------------
#  Notifications Controller
# ---------------------------------------------------------
notifications:
  enabled: ${enableNotifications}

  secret:
    create: ${enableNotifications}
    items:
      slack-token: ${slackNotificationsAppToken}

  # -- Notification services
  notifiers:
    service.slack: |
      token: $slack-token
      username: ArgoCD-PRD
      icon: https://raw.githubusercontent.com/argoproj/argo-cd/master/docs/assets/logo.png

  # -- Centrally managed global application subscriptions
  subscriptions:
    - recipients:
      - slack:${slackNotificationsChannel}
      triggers:
      - on-deployed
      - on-health-degraded
      - on-sync-failed
      - on-sync-status-unknown
      - on-sync-succeeded

  # -- Templates to generate the notification content
  templates:
    template.app-created: |
      message: Application *{{(call .strings.ToUpper .app.metadata.name)}}* has been created.
    template.app-deleted: |
      message: Application *{{(call .strings.ToUpper .app.metadata.name)}}* has been deleted.
    template.app-deployed: |
      message: |
        {{if eq .serviceType "slack"}}:white_check_mark:{{end}} Application *{{(call .strings.ToUpper .app.metadata.name)}}* is now running new version of deployments manifests.
      slack:
        attachments: |
          [{
            "author_name": "{{(call .strings.ToUpper .app.metadata.name)}}",
            "author_link": "https://{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
            "color": "#18be52",
            "fields": [
            {
              "title": "Sync Status",
              "value": "{{.app.status.sync.status}}",
              "short": true
            },
            {
              "title": {{- if .app.spec.source }} "Repository" {{- else if .app.spec.sources }} "Repositories" {{- end }},
              "value": {{- if .app.spec.source }} ":arrow_heading_up: {{ .app.spec.source.repoURL }}" {{- else if .app.spec.sources }} "{{- range $index, $source := .app.spec.sources }}{{ if $index }}\n{{ end }}:arrow_heading_up: {{ $source.repoURL }}{{- end }}" {{- end }},
              "short": true
            },
            {
              "title": "Revision",
              "value": "{{.app.status.sync.revision}}",
              "short": true
            }
            {{range $index, $c := .app.status.conditions}}
            ,
            {
              "title": "{{$c.type}}",
              "value": "{{$c.message}}",
              "short": true
            }
            {{end}}
            ]
          }]
        deliveryPolicy: Post
        notifyBroadcast: false
    template.app-health-degraded: |
      message: |
        {{if eq .serviceType "slack"}}:exclamation:{{end}} Application *{{(call .strings.ToUpper .app.metadata.name)}}* has degraded.
        Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
      slack:
        attachments: |
          [{
            "author_name": "{{(call .strings.ToUpper .app.metadata.name)}}",
            "author_link": "https://{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
            "color": "#f4c030",
            "fields": [
            {
              "title": "Health Status",
              "value": "{{.app.status.health.status}}",
              "short": true
            },
            {
              "title": {{- if .app.spec.source }} "Repository" {{- else if .app.spec.sources }} "Repositories" {{- end }},
              "value": {{- if .app.spec.source }} ":arrow_heading_up: {{ .app.spec.source.repoURL }}" {{- else if .app.spec.sources }} "{{- range $index, $source := .app.spec.sources }}{{ if $index }}\n{{ end }}:arrow_heading_up: {{ $source.repoURL }}{{- end }}" {{- end }},
              "short": true
            }
            {{range $index, $c := .app.status.conditions}}
            ,
            {
              "title": "{{$c.type}}",
              "value": "{{$c.message}}",
              "short": true
            }
            {{end}}
            ]
          }]
        deliveryPolicy: Post
        notifyBroadcast: false
    template.app-sync-failed: |
      message: |
        {{if eq .serviceType "slack"}}:exclamation:{{end}}  The sync operation of application *{{(call .strings.ToUpper .app.metadata.name)}}* has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}
        Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
      slack:
        attachments: |
          [{
            "author_name": "{{(call .strings.ToUpper .app.metadata.name)}}",
            "author_link": "https://{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
            "color": "#E96D76",
            "fields": [
            {
              "title": "Sync Status",
              "value": "{{.app.status.sync.status}}",
              "short": true
            },
            {
              "title": {{- if .app.spec.source }} "Repository" {{- else if .app.spec.sources }} "Repositories" {{- end }},
              "value": {{- if .app.spec.source }} ":arrow_heading_up: {{ .app.spec.source.repoURL }}" {{- else if .app.spec.sources }} "{{- range $index, $source := .app.spec.sources }}{{ if $index }}\n{{ end }}:arrow_heading_up: {{ $source.repoURL }}{{- end }}" {{- end }},
              "short": true
            }
            {{range $index, $c := .app.status.conditions}}
            ,
            {
              "title": "{{$c.type}}",
              "value": "{{$c.message}}",
              "short": true
            }
            {{end}}
            ]
          }]
        deliveryPolicy: Post
        notifyBroadcast: false
    template.app-sync-running: |
      message: |
        The sync operation of application *{{(call .strings.ToUpper .app.metadata.name)}}* has started at {{.app.status.operationState.startedAt}}.
        Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
      slack:
        attachments: |
          [{
            "author_name": "{{(call .strings.ToUpper .app.metadata.name)}}",
            "author_link": "https://{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
            "color": "#0DADEA",
            "fields": [
            {
              "title": "Sync Status",
              "value": "{{.app.status.sync.status}}",
              "short": true
            },
            {
              "title": {{- if .app.spec.source }} "Repository" {{- else if .app.spec.sources }} "Repositories" {{- end }},
              "value": {{- if .app.spec.source }} ":arrow_heading_up: {{ .app.spec.source.repoURL }}" {{- else if .app.spec.sources }} "{{- range $index, $source := .app.spec.sources }}{{ if $index }}\n{{ end }}:arrow_heading_up: {{ $source.repoURL }}{{- end }}" {{- end }},
              "short": true
            }
            {{range $index, $c := .app.status.conditions}}
            ,
            {
              "title": "{{$c.type}}",
              "value": "{{$c.message}}",
              "short": true
            }
            {{end}}
            ]
          }]
        deliveryPolicy: Post
        notifyBroadcast: false
    template.app-sync-status-unknown: |
      message: |
        {{if eq .serviceType "slack"}}:exclamation:{{end}} Application *{{(call .strings.ToUpper .app.metadata.name)}}* sync is 'Unknown'.
        Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
        {{if ne .serviceType "slack"}}
        {{range $c := .app.status.conditions}}
            * {{$c.message}}
        {{end}}
        {{end}}
      slack:
        attachments: |
          [{
            "author_name": "{{(call .strings.ToUpper .app.metadata.name)}}",
            "author_link": "https://{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
            "color": "#E96D76",
            "fields": [
            {
              "title": "Sync Status",
              "value": "{{.app.status.sync.status}}",
              "short": true
            },
            {
              "title": {{- if .app.spec.source }} "Repository" {{- else if .app.spec.sources }} "Repositories" {{- end }},
              "value": {{- if .app.spec.source }} ":arrow_heading_up: {{ .app.spec.source.repoURL }}" {{- else if .app.spec.sources }} "{{- range $index, $source := .app.spec.sources }}{{ if $index }}\n{{ end }}:arrow_heading_up: {{ $source.repoURL }}{{- end }}" {{- end }},
              "short": true
            }
            {{range $index, $c := .app.status.conditions}}
            ,
            {
              "title": "{{$c.type}}",
              "value": "{{$c.message}}",
              "short": true
            }
            {{end}}
            ]
          }]
        deliveryPolicy: Post
        notifyBroadcast: false
    template.app-sync-succeeded: |
      message: |
        {{if eq .serviceType "slack"}}:white_check_mark:{{end}} Application *{{(call .strings.ToUpper .app.metadata.name)}}* has been successfully synced at {{.app.status.operationState.finishedAt}}.
        Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
      slack:
        attachments: |
          [{
            "author_name": "{{(call .strings.ToUpper .app.metadata.name)}}",
            "author_link": "https://{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
            "color": "#18be52",
            "fields": [
            {
              "title": "Sync Status",
              "value": "{{.app.status.sync.status}}",
              "short": true
            },
            {
              "title": {{- if .app.spec.source }} "Repository" {{- else if .app.spec.sources }} "Repositories" {{- end }},
              "value": {{- if .app.spec.source }} ":arrow_heading_up: {{ .app.spec.source.repoURL }}" {{- else if .app.spec.sources }} "{{- range $index, $source := .app.spec.sources }}{{ if $index }}\n{{ end }}:arrow_heading_up: {{ $source.repoURL }}{{- end }}" {{- end }},
              "short": true
            }
            {{range $index, $c := .app.status.conditions}}
            ,
            {
              "title": "{{$c.type}}",
              "value": "{{$c.message}}",
              "short": true
            }
            {{end}}
            ]
          }]
        deliveryPolicy: Post
        notifyBroadcast: false

  # -- Conditions when the notifications should be sent
  triggers:
    trigger.on-created: |
      - description: Application is created.
        oncePer: app.metadata.name
        send:
        - app-created
        when: "true"
    trigger.on-deleted: |
      - description: Application is deleted.
        oncePer: app.metadata.name
        send:
        - app-deleted
        when: app.metadata.deletionTimestamp != nil
    trigger.on-deployed: |
      - description: Application is synced and healthy. Triggered once per commit.
        oncePer: app.status.operationState.syncResult.revision
        send:
        - app-deployed
        when: app.status.operationState != nil and app.status.operationState.phase in ['Succeeded']
          and app.status.health.status == 'Healthy'
    trigger.on-health-degraded: |
      - description: Application has degraded
        send:
        - app-health-degraded
        when: app.status.health.status == 'Degraded'
    trigger.on-sync-failed: |
      - description: Application syncing has failed
        send:
        - app-sync-failed
        when: app.status.operationState != nil and app.status.operationState.phase in ['Error',
          'Failed']
    trigger.on-sync-running: |
      - description: Application is being synced
        send:
        - app-sync-running
        when: app.status.operationState != nil and app.status.operationState.phase in ['Running']
    trigger.on-sync-status-unknown: |
      - description: Application status is 'Unknown'
        send:
        - app-sync-status-unknown
        when: app.status.sync.status == 'Unknown'
    trigger.on-sync-succeeded: |
      - description: Application syncing has succeeded
        send:
        - app-sync-succeeded
        when: app.status.operationState != nil and app.status.operationState.phase in ['Succeeded']
