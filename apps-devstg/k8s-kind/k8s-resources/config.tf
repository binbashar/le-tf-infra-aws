#
# Providers
#
provider "aws" {
  region                  = var.region
  profile                 = var.profile
  shared_credentials_file = "~/.aws/${var.project}/config"
}

locals {
  kubernetes = {
    # kubectl config view --raw --minify --flatten --output='jsonpath={.clusters[].cluster.server}'
    host                   = "https://192.168.0.85:6443"
    # kubectl config view --raw --minify --flatten --output='jsonpath={.clusters[].cluster.certificate-authority-data}'
    cluster_ca_certificate = base64decode("LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EUXhPVEUzTXpjd01sb1hEVE14TURReE56RTNNemN3TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUhwCjQxZjJnVmxiZ3ZZU0x1WEJMNm4xYWFxbFMvaG5EckNjdGpOWDROYmxKVzVOQWhpeHRZeDkrMVo4VGdQZHVqd3EKb0ZiSmV2NkVTdlNFUklHNDY0RU4xdnh6c0pFbjU4Sy9vWVdZMlNGV0dyNGFtam9WQStSallNTU5vZHVHa0prcAo2RTlOKzhEbno0RFVkNWZrMVZDVHlLdnJiU01tcWxGSGlOZDZacUZFb0k5ZnFOd3hBMUJmT0dUNWt1Nm9iVzVjCmNHNzEwUzRDWU5MdUMzWjJtQVRpNFpBeG40OFBKYU03amltZFhRM0VyOCs5SnAwV2ZXakg3NU5ZTFhzMGpzbXgKNzJEaUp1QVJQK0pPTjhXQXU0STFXRWNYWnEwenNLU3U1UzE5TUxrTG1ad3I2MW9LZXoxNG4vUG5sUjJ3eit4agpsWHdDRGw2M1V5NWVyMVhiNno4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZLbnhjaEU2M2hXL0VYWkhXbnRHNlBIUDFFbm1NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCN0txN1FabDNvQlJXUXg1WnhvRlNYS3dtMTdyMzhSS25mK0orMWJ2b2pDZUZoYXh6dgpJTWV1akV3b2pVKzdXRmk2ZG1vbDUycGJqdTFjeXJTbE9wRmlOOFIxZ0wvbHAxSzlDWFdjNSsvZ29nK2VyR1lwCmpUMXJjRVAvanZjaDZHSzZQa1doMjdGb3NwQkdNYnY1VGJFbmE1a0c1b24wVjErOWM2U0liNHJwVmdWQjZKb08KRTFFYlJyQkhHdXowOStVRDNncXBOSVVicnE0anR5RVdwV1J4all1bThUdHp6dC9FVmx6K1FKblkyZG9jVUVMSQpQTGY1MGpROFh3MUFlQzJoZklTK01ZUkZmNm9xS0dCQ1VlTHMzaGgrd25scDlPQ1NSYjIxYTh5d1VNVTNHTWtvCnd5REgwZDZ4Wi9tR2lTUnF5ZVNycVFmallrcUhsakJFSFZ5SwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==")
    # kubectl config view --raw --minify --flatten --output='jsonpath={.users[].user.client-key-data}'
    client_key             = base64decode("LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBd0tUMTlSVjJOV0dQcjlsRVVzdURWNHB0T09kQzJVN05HeEFpZE9mZ3RIWTA4aTdjCjFPdkZhUWdVUGJQcDVGYnhUZWNmcnN1SzFGeDB6RHExNnlmeDZYMm50YUNnYUpGV25zS1lSQ09YV01hVTFsRHoKMmlpc0p3bnR2eDBPZEVNd3M4dVVTT0JScUFVdXc5dC9jbjFGK1JPTGpJTi9UWGpKMENTZ2ZFWEwzbVNFWlFaaApYKzd3L1pQZVVXNytOSzRvdWhGYlNrc002V1QzMVlYc2pkalF3SjJLMVppN2lBMDl2WVorMEY3NWtCN3ZUM3hPCmovWEl1VFN0NlA5RnYzWXh0Ym9MRUQ0Rk4zeWRYbUNreTVQazJLbURQUE1KV0k5em5qbitseXdEQ01TbnJYNE4KVFdPYWNYc3NMSzVHQndrYlpTNTdpaWNoZlNHdVRxNVFFWTFlMFFJREFRQUJBb0lCQUhtelBOYVp1bFc2em9VdQo0cVRUZ0tQN0JVa2ZmL0c4Z0lLS1ROcEI2b2pXN0ZmYkZ4TkQ1ekNWTkFSTzlvR1VFMWs5bTV4WFpkc0dsWnEzCnRGbGNvTXo2M3NvMU1XRWQvL1RIeGwyMWhsVkZEcDNlQWs5ZHhuUGJKK0RHUUcxZVRSUW9sZ0w4QTFuNy9ERXIKSjNaeWdaUDZydndUem9ab3VrWE4vYnpFY3lpSWlSUU84b25sM3BUU28yM1g1LzRRQTNtMnBPOFp0bEt0VXZIKwp0R0c2dnIveTk5TkYwZDZpZlhKODI0c0pHTWdIeEdmUjJUcUlYR2lRSzhFL3E5anJXanp0aDhxTlZXU3lOL1Y3CnlRU29OVkxKZmhxaERBamxQbFNzcWZpN2J2Umh5dEpyamlQeW56bzN0VG5RVlN5YnZqbldpT0N6WHNNbkxvQVQKQjVmMWZtRUNnWUVBK3UweDhKRlNsOE1mMDRzT2dJLys3V25JS0dGcHB4Z1hVaTF5TktnNXY5VE9Dc3R4bGtGRgo2UlowSWU4dlVDQm1BcTExRnhiOTVyNTJaUFplNWJrNXNreUllYTdiekhsNGFYQ2Nzb0ZXYUNDVkx3bTZ0SGlrCnA4eE1ZYXY2UFZkWmI2T2Mvb1JDZ2V1TXM5bTFTYzJOd1FTYmhEalVhYThhRUdVeHhKSFNHTzBDZ1lFQXhJb1kKVjNtak85ZFQ3TEpNT1JoL1NoZmt5bk4wdjY3VDJldjc0cnRsSFF4bDdhU1dyMUpOVWw4Q2k3bU1JOXU2ZXRhbApjOTVRa2VBbTBVU1NIejZsSmcrVEhGNFpmb24wcEVTME1EZ053OGlTUTYxMyttT1RjWkhHMXY3c09ZVHhyM0xlCmE1TXhyQTBLN2N3RTVvY2RCemI3RFFtK2RXNG05OXZNdFB1TkZQVUNnWUJvUEEvNnR1TndWNFhwQW1MTDFRVTQKNmpCVFZlUGxuWVJTaHI1aVVWOXI2S0tPcVdSTjNsK0VLK2VpRVJHK1h6Y0E5YjBtRWs3Mmd6ZjdTTHl6QVBhTwpzbXdlNEJ3K0hGZUF0VjdpYUFmVXlYUXZUZ05ZNUtUQmI0UnJMbDJORGJRQlJCMzdQRVhFWW16WWFSOTl3UDJaCnFLaFJqS253SE9UZTJxcUoxV2xKSVFLQmdGQll4Q3ErcDJUSFdwL2hKQmdUVTdaT25sSEZjVzBMWThBcklRWkgKNWNaQ1Uwa2JpQjZVWHRmVno0eWZoaE1DdVBHTzNvVEgxZGhNOHBHS250SDNJankxRVViL2tSeVIrVmxPWFB0NQpidWNqRCtocStpbDZtOFJKL0NmWWYybmtWNG1LUkRObU1XQk0xTEx5UE82aFBkUzlQVlRQTHZXQzJwdHBWLzZFCjkrQWhBb0dBS0xmL0VoWGR4ZXA0NlFxSHR1ZksrRkU3MjlzMGsxdk1xUlFtYWNOaEJuN3NDNmxYbGZ0Wks4bXkKWXZ4bDNoQnB2eGhmMUFGZ2lBYkVVMmJ3aWhDVGJKcVlBcXJtRDJ6OTlGakR5dnU5TUI5dEM5Y0FWY1BNbzRWQQpLYmZlOWJDUEdFNW51UGdEV0MvUEZsWllzK0RuV3JtWk40WXQ2VDdCZ2VFV3ZtbDZMeVk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==")
    # kubectl config view --raw --minify --flatten --output='jsonpath={.users[].user.client-certificate-data}'
    client_certificate     = base64decode("LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lJV0JqK3BYbE0zT0l3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TVRBME1Ua3hOek0zTURKYUZ3MHlNakEwTVRreE56TTNNRFphTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdLVDE5UlYyTldHUHI5bEUKVXN1RFY0cHRPT2RDMlU3Tkd4QWlkT2ZndEhZMDhpN2MxT3ZGYVFnVVBiUHA1RmJ4VGVjZnJzdUsxRngwekRxMQo2eWZ4NlgybnRhQ2dhSkZXbnNLWVJDT1hXTWFVMWxEejJpaXNKd250dngwT2RFTXdzOHVVU09CUnFBVXV3OXQvCmNuMUYrUk9MaklOL1RYakowQ1NnZkVYTDNtU0VaUVpoWCs3dy9aUGVVVzcrTks0b3VoRmJTa3NNNldUMzFZWHMKamRqUXdKMksxWmk3aUEwOXZZWiswRjc1a0I3dlQzeE9qL1hJdVRTdDZQOUZ2M1l4dGJvTEVENEZOM3lkWG1Dawp5NVBrMkttRFBQTUpXSTl6bmpuK2x5d0RDTVNuclg0TlRXT2FjWHNzTEs1R0J3a2JaUzU3aWljaGZTR3VUcTVRCkVZMWUwUUlEQVFBQm8wZ3dSakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0h3WURWUjBqQkJnd0ZvQVVxZkZ5RVRyZUZiOFJka2RhZTBibzhjL1VTZVl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJSDRlZFJzMDBpeUZkZnFzK3NMZUJ3MzlOZ0dodWh6NHEyUnJ4cE1ZM2RDU2pCNmg4UXViVmR4CjNwdHVaK2p5Qm1HSjREZ1FiMktyN01CMHE1emdBYngvckp2Q0RjalQ4SHF1a3ZScG5zSUdhTWs3NHZSYVVmUnEKSFVlYWlVU0tFVkdXcThFS3dRY20wT3hXVXZlQkJzZUVBbEFIellHTFBHZjcrT0M0SFFqU1I0czJhMkh6anNMNQpRRmlidjk1Y1F2ZitWMzF3dWMxY0ZONWVoYmNYVHd6OCtvK0tocjRjZHlKS2Y5L3NucXJmS3lHMElENnQ5WEJGCkxoV2pTUHg5THA1WitZTytyUGxiTUJidHJrWlFmTXlGbzhSbEYzTU00SnczRUZsalFQdmV6V2o2ZjV4enRPa20KT2NSWjRQQUJiNnlNUVJKWVRuaEhLRkhlamIwelluMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=")
  }
}

provider "kubernetes" {
  host                   = local.kubernetes.host
  cluster_ca_certificate = local.kubernetes.cluster_ca_certificate
  client_key             = local.kubernetes.client_key
  client_certificate     = local.kubernetes.client_certificate
}

provider "helm" {
  kubernetes {
    host                   = local.kubernetes.host
    cluster_ca_certificate = local.kubernetes.cluster_ca_certificate
    client_key             = local.kubernetes.client_key
    client_certificate     = local.kubernetes.client_certificate
  }
}

#
# Backend Config (partial)
#
terraform {
  required_version = ">= 0.14.4"

  required_providers {
    aws        = "~> 3.28"
    helm       = "~> 2.1.0"
    kubernetes = "~> 2.0.2"
  }

  backend "s3" {
    key = "apps-devstg/k8s-kind/k8s-resources/terraform.tfstate"
  }
}
