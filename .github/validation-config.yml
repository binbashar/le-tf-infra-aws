# AI-Powered Infrastructure Validation Configuration
# This file defines validation rules, thresholds, and behavior for the AI validation system

validation:
  # Global validation settings
  settings:
    timeout_seconds: 600  # Maximum time for validation commands
    max_plan_size_kb: 1024  # Maximum size of terraform plan output for AI analysis
    enable_security_scan: true  # Enable security scanning
    parallel_validations: true  # Run layer validations in parallel

  # Layer-specific validation commands
  layer_types:
    security:
      description: "Security layers including IAM, KMS, secrets management"
      patterns:
        - "security-*"
        - "secrets-manager"
        - "base-identities"
      commands:
        - name: "format_check"
          command: "leverage tf fmt -check -diff"
          required: true
          timeout: 60
        - name: "initialization"
          command: "leverage tf init"
          required: true
          timeout: 120
        - name: "validation"
          command: "leverage tf validate"
          required: true
          timeout: 60
        - name: "security_scan"
          command: "leverage tf plan | tee /tmp/plan.out && checkov -f /tmp/plan.out --framework terraform_plan"
          required: false
          timeout: 300
        - name: "plan_generation"
          command: "leverage tf plan -no-color"
          required: true
          timeout: 300

    network:
      description: "Network infrastructure including VPC, firewall, routing"
      patterns:
        - "base-network"
        - "network-*"
        - "*-vpn"
      commands:
        - name: "format_check"
          command: "leverage tf fmt -check -diff"
          required: true
          timeout: 60
        - name: "initialization"
          command: "leverage tf init"
          required: true
          timeout: 120
        - name: "validation"
          command: "leverage tf validate"
          required: true
          timeout: 60
        - name: "plan_generation"
          command: "leverage tf plan -no-color"
          required: true
          timeout: 300

    database:
      description: "Database layers including RDS, DynamoDB, Aurora"
      patterns:
        - "databases-*"
      commands:
        - name: "format_check"
          command: "leverage tf fmt -check -diff"
          required: true
          timeout: 60
        - name: "initialization"
          command: "leverage tf init"
          required: true
          timeout: 120
        - name: "validation"
          command: "leverage tf validate"
          required: true
          timeout: 60
        - name: "plan_generation"
          command: "leverage tf plan -no-color"
          required: true
          timeout: 400
        - name: "backup_validation"
          command: "leverage tf plan | grep -i backup || echo 'No backup configuration found'"
          required: false
          timeout: 60

    container:
      description: "Container orchestration including EKS, ECS, Kubernetes"
      patterns:
        - "k8s-*"
        - "*-ecs"
      commands:
        - name: "format_check"
          command: "leverage tf fmt -check -diff"
          required: true
          timeout: 60
        - name: "initialization"
          command: "leverage tf init"
          required: true
          timeout: 120
        - name: "validation"
          command: "leverage tf validate"
          required: true
          timeout: 60
        - name: "plan_generation"
          command: "leverage tf plan -no-color"
          required: true
          timeout: 500

    devops:
      description: "DevOps tools including monitoring, CI/CD, operational tools"
      patterns:
        - "tools-*"
        - "*-jenkins"
        - "*-monitoring"
        - "*-atlantis"
      commands:
        - name: "format_check"
          command: "leverage tf fmt -check -diff"
          required: true
          timeout: 60
        - name: "initialization"
          command: "leverage tf init"
          required: true
          timeout: 120
        - name: "validation"
          command: "leverage tf validate"
          required: true
          timeout: 60
        - name: "plan_generation"
          command: "leverage tf plan -no-color"
          required: true
          timeout: 300

    storage:
      description: "Storage systems including S3, EFS, backup solutions"
      patterns:
        - "*-s3"
        - "*-backup"
        - "*-storage"
      commands:
        - name: "format_check"
          command: "leverage tf fmt -check -diff"
          required: true
          timeout: 60
        - name: "initialization"
          command: "leverage tf init"
          required: true
          timeout: 120
        - name: "validation"
          command: "leverage tf validate"
          required: true
          timeout: 60
        - name: "plan_generation"
          command: "leverage tf plan -no-color"
          required: true
          timeout: 300

    compute:
      description: "Compute resources including EC2, Lambda, Auto Scaling"
      patterns:
        - "*-ec2"
        - "*-lambda"
        - "*-autoscaling"
      commands:
        - name: "format_check"
          command: "leverage tf fmt -check -diff"
          required: true
          timeout: 60
        - name: "initialization"
          command: "leverage tf init"
          required: true
          timeout: 120
        - name: "validation"
          command: "leverage tf validate"
          required: true
          timeout: 60
        - name: "plan_generation"
          command: "leverage tf plan -no-color"
          required: true
          timeout: 300

    data-analytics:
      description: "Data and analytics including ML, AI, data lakes, Bedrock"
      patterns:
        - "data-*"
        - "*-ml"
        - "*-bedrock"
        - "*-analytics"
      commands:
        - name: "format_check"
          command: "leverage tf fmt -check -diff"
          required: true
          timeout: 60
        - name: "initialization"
          command: "leverage tf init"
          required: true
          timeout: 120
        - name: "validation"
          command: "leverage tf validate"
          required: true
          timeout: 60
        - name: "plan_generation"
          command: "leverage tf plan -no-color"
          required: true
          timeout: 400

    infrastructure:
      description: "General infrastructure layers that don't match specific types"
      patterns:
        - "*"
      commands:
        - name: "format_check"
          command: "leverage tf fmt -check -diff"
          required: true
          timeout: 60
        - name: "initialization"
          command: "leverage tf init"
          required: true
          timeout: 120
        - name: "validation"
          command: "leverage tf validate"
          required: true
          timeout: 60
        - name: "plan_generation"
          command: "leverage tf plan -no-color"
          required: true
          timeout: 300

# AI analysis configuration
ai_analysis:
  # GitHub Models API settings
  api:
    model: "openai/gpt-4o"  # Primary model for analysis (GitHub Models format)
    fallback_model: "openai/gpt-4o-mini"  # Fallback if primary fails
    temperature: 0.3  # Lower temperature for more consistent technical analysis
    max_tokens: 2000  # Maximum tokens for AI response
    timeout_seconds: 30  # API call timeout
    endpoint: "https://models.github.ai/inference/chat/completions"  # GitHub Models API endpoint

  # Feature toggles
  features:
    enable_blast_radius: true  # Analyze cross-layer dependencies
    enable_security_focus: true  # Enhanced security analysis
    enable_compliance_check: true  # Check against compliance standards
    enable_interactive_bot: true  # Enable @aibot commands
    enable_persona_selection: true  # Use layer-specific AI personas

  # Analysis thresholds
  thresholds:
    max_diff_size_kb: 500  # Maximum diff size to include in AI analysis
    max_plan_resources: 50  # Maximum number of resources to analyze in detail
    critical_changes:  # Changes that always trigger detailed analysis
      - "aws_iam_*"
      - "aws_kms_*"
      - "aws_s3_bucket_policy"
      - "aws_security_group*"
      - "aws_vpc*"

# Notification and reporting settings
notifications:
  # PR comment settings
  comments:
    include_summary: true  # Include executive summary
    include_details: true  # Include detailed findings
    include_recommendations: true  # Include improvement suggestions
    include_interactive_commands: true  # Show @aibot command options
    max_comment_length: 65000  # Maximum GitHub comment length

  # Status check settings
  status_checks:
    enable_required_check: false  # Whether to create a required status check
    success_threshold: "no_critical_issues"  # When to mark as success
    failure_conditions:  # Conditions that cause failure
      - "validation_failed"
      - "security_critical_found"
      - "compliance_violation"

# Security and compliance rules
security:
  # Critical security patterns to always flag
  critical_patterns:
    - pattern: '0\.0\.0\.0/0'
      message: "Overly permissive CIDR block detected"
      severity: "high"
    - pattern: 'password\s*=\s*"[^"]+"'
      message: "Hardcoded password detected"
      severity: "critical"
    - pattern: 'public_key\s*=\s*"[^"]+"'
      message: "Hardcoded public key detected"
      severity: "high"
    - pattern: 'deletion_protection\s*=\s*false'
      message: "Deletion protection disabled"
      severity: "medium"

  # Compliance frameworks
  compliance_frameworks:
    - name: "CIS AWS Foundations Benchmark"
      enabled: true
      rules:
        - "Ensure IAM password policy requires minimum length of 14 or greater"
        - "Ensure no root account access key exists"
        - "Ensure MFA is enabled for all IAM users"
    - name: "AWS Well-Architected Framework"
      enabled: true
      pillars:
        - "Security"
        - "Reliability"
        - "Performance Efficiency"
        - "Cost Optimization"

# Integration settings
integrations:
  # Checkov security scanner integration
  checkov:
    enabled: true
    framework: "terraform"
    check_types:
      - "CKV_AWS"  # AWS specific checks
      - "CKV2_AWS"  # AWS composite checks
    skip_checks: []  # Checks to skip

  # tfsec integration
  tfsec:
    enabled: false  # Disabled in favor of Checkov
    format: "json"

# Environment-specific overrides
environments:
  development:
    validation:
      timeout_seconds: 300  # Shorter timeout for dev

  staging:
    validation:
      timeout_seconds: 450
    security:
      compliance_frameworks:
        - name: "CIS AWS Foundations Benchmark"
          enabled: true

  production:
    validation:
      timeout_seconds: 600  # Full timeout for production
    ai_analysis:
      features:
        enable_blast_radius: true
        enable_security_focus: true
        enable_compliance_check: true
    notifications:
      status_checks:
        enable_required_check: true  # Required check in production